{"version":3,"sources":["./src/app/dashboard/dashboard-routing.module.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {DashboardComponent} from './dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DashboardComponent,\n    data: {\n      breadcrumb: 'Dashboard'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","<div class=\"row\">\n  <!-- counter-card-1 start-->\n  <div class=\"col-md-12 col-xl-4\">\n    <app-card [cardClass]=\"'counter-card-1'\" [blockClass]=\"'card-body-big'\">\n      <div class=\"row\">\n        <div class=\"col-6 counter-card-icon\">\n          <i class=\"icofont icofont-chart-histogram\"></i>\n        </div>\n        <div class=\"col-6  text-right\">\n          <div class=\"counter-card-text\">\n            <h3>{{orders.length}}</h3>\n            <p>{{'Orders' | translate}}</p>\n          </div>\n        </div>\n      </div>\n    </app-card>\n  </div>\n  <!-- counter-card-1 end-->\n\n  <!-- counter-card-2 start -->\n  <div class=\"col-md-6 col-xl-4\">\n    <app-card [cardClass]=\"'counter-card-2'\" [blockClass]=\"'card-body-big'\">\n      <div class=\"row\">\n        <div class=\"col-6 counter-card-icon\">\n          <i class=\"icofont icofont-chart-line-alt\"></i>\n        </div>\n        <div class=\"col-6 text-right\">\n          <div class=\"counter-card-text\">\n            <h3>{{users.length}}</h3>\n            <p>{{'Users' | translate}}</p>\n          </div>\n        </div>\n      </div>\n    </app-card>\n  </div>\n  <!-- counter-card-2 end -->\n\n  <!-- counter-card-3 start -->\n  <div class=\"col-md-6 col-xl-4\">\n    <app-card [cardClass]=\"'counter-card-3'\" [blockClass]=\"'card-body-big'\">\n      <div class=\"row\">\n        <div class=\"col-6 counter-card-icon\">\n          <i class=\"icofont icofont-chart-line\"></i>\n        </div>\n        <div class=\"col-6 text-right\">\n          <div class=\"counter-card-text\">\n            <h3>{{rest.length}}</h3>\n            <p>{{'Restaurants' | translate}}</p>\n          </div>\n        </div>\n      </div>\n    </app-card>\n  </div>\n  <!-- counter-card-3 end -->\n\n\n  <!-- Reset Order Start -->\n  <div class=\"col-md-12\">\n    <div class=\"card\">\n      <div class=\"card-body\">\n        <h5>{{'Recent 10 Order' | translate}}</h5>\n      </div>\n      <div class=\"card-body reset-table p-t-0\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-hover\">\n            <thead>\n              <tr class=\"text-uppercase\">\n                <th>{{'User' | translate}}</th>\n                <th>{{'User Name' | translate}}</th>\n                <th>{{'Restaurant' | translate}}</th>\n                <th>{{'Status' | translate}}</th>\n                <th>{{'Ordered on' | translate}}</th>\n                <th>{{'Total' | translate}}</th>\n                <th>{{'Quantity' | translate}}</th>\n                <th>{{'Action'| translate}}</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of dummy\">\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                    'border-radius': '5px',\n                    height: '10px',\n                    border: '1px solid white'\n                  }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                        'border-radius': '5px',\n                        height: '10px',\n                        border: '1px solid white'\n                      }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                    'border-radius': '5px',\n                    height: '10px',\n                    border: '1px solid white'\n                  }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                      'border-radius': '5px',\n                      height: '10px',\n                      border: '1px solid white'\n                    }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                      'border-radius': '5px',\n                      height: '10px',\n                      border: '1px solid white'\n                    }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                    'border-radius': '5px',\n                    height: '10px',\n                    border: '1px solid white'\n                  }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                      'border-radius': '5px',\n                      height: '10px',\n                      border: '1px solid white'\n                    }\"></ngx-skeleton-loader>\n                </td>\n                <td>\n                  <ngx-skeleton-loader count=\"1\" [theme]=\"{\n                        'border-radius': '5px',\n                        height: '10px',\n                        border: '1px solid white'\n                      }\"></ngx-skeleton-loader>\n                </td>\n              </tr>\n              <tr *ngFor=\"let item of displayOrders;let i = index\">\n                <td><a href=\"javascript:;\"><img class=\"img-responsive\" style=\"height: 40px;border-radius: 50%;\"\n                      [src]=\"item.uid.cover\" onError=\"this.src='assets/images/user.png'\" alt=\"chat-user\"></a>\n                </td>\n                <td> {{item.uid.fullname}}</td>\n                <td>{{item.vid.name}}</td>\n                <td><button type=\"button\" disabled [className]=\"getClass(item.status)\">{{item.status}}</button></td>\n                <td>{{getDates(item.time)}}</td>\n                <td> {{getCurreny()}} {{item.grandTotal}}</td>\n                <td>{{item.order.length}}</td>\n                <td><button type=\"button\" (click)=\"openOrder(item)\"\n                    class=\"btn btn-success btn-round btn-outline-success\">{{'View' | translate}}</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Reset Order End -->\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ApisService } from '../services/apis.service';\nimport * as moment from 'moment';\nimport { NavigationExtras, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: [\n    './dashboard.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class DashboardComponent implements OnInit {\n  rest: any[] = [];\n  users: any[] = [];\n  drivers: any[] = [];\n  orders: any[] = [];\n  displayOrders: any[] = [];\n  dummy = Array(10);\n  constructor(\n    private api: ApisService,\n    private router: Router\n  ) {\n    this.getRest();\n    this.getUsers();\n    this.getAllOrders();\n\n  }\n\n  ngOnInit() {\n  }\n\n  getRest() {\n    this.api.getVenues().then((data) => {\n      console.log('rest data', data);\n      this.rest = data;\n    }, error => {\n      console.log(error);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getUsers() {\n    this.users = [];\n    this.drivers = [];\n    this.api.getUsers().then((data) => {\n      console.log('users data', data);\n      data.forEach(element => {\n        if (element.type === 'user') {\n          this.users.push(element);\n        } else if (element.type === 'delivery') {\n          this.drivers.push(element);\n        }\n      });\n    }, error => {\n      console.log(error);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getAllOrders() {\n    this.api.getAllOrders().then((data) => {\n      console.log('orders data', data);\n      data.forEach(element => {\n        element.time = new Date(element.time);\n      });\n      data.sort((a, b) => b.time - a.time);\n      this.orders = data;\n      this.orders.forEach((element, i) => {\n        if (i <= 9) {\n          element.order = JSON.parse(element.order);\n          this.displayOrders.push(element);\n        }\n      });\n      this.dummy = [];\n    }, error => {\n      console.log(error);\n      this.dummy = [];\n    }).catch(error => {\n      console.log(error);\n      this.dummy = [];\n    });\n  }\n\n  getDates(date) {\n    return moment(date).format('llll');\n  }\n\n  getClass(item) {\n    if (item === 'created' || item === 'accepted' || item === 'picked') {\n      return 'btn btn-primary btn-round';\n    } else if (item === 'delivered') {\n      return 'btn btn-success btn-round';\n    } else if (item === 'rejected' || item === 'cancel') {\n      return 'btn btn-danger btn-round';\n    }\n    return 'btn btn-warning btn-round';\n  }\n\n  openOrder(item) {\n    console.log(item);\n    const navData: NavigationExtras = {\n      queryParams: {\n        id: item.id\n      }\n    };\n    this.router.navigate(['admin-orderdetails'], navData);\n  }\n\n  getCurreny() {\n    return this.api.getCurrecySymbol();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgxSkeletonLoaderModule } from 'ngx-skeleton-loader';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    SharedModule,\n    NgxSkeletonLoaderModule\n  ],\n  declarations: [DashboardComponent]\n})\nexport class DashboardModule { }\n"],"sourceRoot":"webpack:///"}